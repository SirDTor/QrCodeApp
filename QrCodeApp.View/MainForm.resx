<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAABgAAABQAAAARAAAAEQAAABIAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAABIAAAARAAAAEQAA
        ABQAAAAGAAAAAAAAAAEAAACzAAAA9AAAAOwAAADtAAAA+AAAAMAAAAADAAAAAAAAAAIAAAABAAAAAQAA
        AAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAMAAADAAAAA+AAA
        AO0AAADsAAAA9AAAALMAAAABAAAAEwAAAOoAAAD/AAAA9AAAAPEAAAD3AAAAvwAAAAIAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAgAA
        AL8AAAD3AAAA8QAAAPQAAAD/AAAA6gAAABMAAAARAAAA7AAAAPQAAAAcAAAADQAAACYAAAAPAAAADQAA
        ABEAAAAQAAAAEAAAABAAAAASAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAA
        ABIAAAANAAAADwAAACYAAAANAAAAHAAAAPQAAADsAAAAEQAAABEAAADsAAAA8QAAABAAAACwAAAA8wAA
        AO8AAADzAAAA8gAAAPIAAADyAAAA8AAAAPcAAAC5AAAAAQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAA
        AAMAAADDAAAA/AAAAPEAAADvAAAA8wAAALAAAAAQAAAA8QAAAOwAAAARAAAAEQAAAO8AAADvAAAAIgAA
        AOkAAAD/AAAA8gAAAPIAAADyAAAA8gAAAPIAAADyAAAA/wAAAO4AAAARAAAAAAAAAAEAAAAAAAAAAQAA
        AAEAAAAAAAAAAwAAAL4AAAD2AAAA7wAAAPMAAAD/AAAA6gAAACIAAADvAAAA7wAAABEAAAAAAAAAwAAA
        AL4AAAAOAAAA7wAAAPMAAAAfAAAADAAAABEAAAARAAAADAAAAB8AAADyAAAA8AAAABAAAAAAAAAAAQAA
        AAEAAAABAAAAAQAAAAAAAAACAAAAEQAAACYAAAANAAAAHAAAAPMAAADvAAAADgAAAL4AAADAAAAAAAAA
        AAAAAAAIAAAAAgAAAA8AAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAA
        AAAAAAABAAAAAAAAAAcAAAAGAAAAAAAAALoAAAD0AAAA8QAAALAAAAAQAAAA8AAAAPEAAAAPAAAAAgAA
        AAgAAAAAAAAAAQAAAAIAAAAAAAAAEQAAAPIAAADyAAAAEQAAAAAAAAACAAAAAgAAAAAAAAARAAAA8gAA
        APIAAAAQAAAAAAAAAAEAAAAAAAAAwwAAAL4AAAAQAAAA7QAAAP8AAAD/AAAA6QAAACMAAADuAAAA8wAA
        ABEAAAAAAAAAAgAAAAEAAAAAAAAAAgAAAAAAAAAQAAAA8gAAAPIAAAARAAAAAAAAAAIAAAACAAAAAAAA
        ABEAAADyAAAA8gAAABAAAAAAAAAAAAAAABAAAADzAAAA7gAAACMAAADpAAAA/wAAAP8AAADtAAAAEAAA
        AL0AAADDAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAA
        AAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAAAAAAAEAAAAPEAAADwAAAAEAAAALAAAADxAAAA9AAA
        ALoAAAAAAAAABgAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAAAPAAAADyAAAAHwAA
        AAwAAAARAAAAEQAAAAwAAAAfAAAA8gAAAPAAAAAQAAAAAAAAAAAAAAAQAAAA8AAAAPMAAAAcAAAADQAA
        ACYAAAARAAAAAgAAAAAAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAARAAAA7gAA
        AP8AAADyAAAA8gAAAPIAAADyAAAA8gAAAPIAAAD/AAAA7gAAABEAAAAAAAAAAAAAABEAAADuAAAA/wAA
        APMAAADvAAAA9gAAAL4AAAADAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        AAEAAAC5AAAA9wAAAPAAAADyAAAA8gAAAPIAAADyAAAA8AAAAPcAAAC5AAAAAQAAAAAAAAAAAAAAAQAA
        ALkAAAD3AAAA8AAAAPEAAAD8AAAAwwAAAAMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAYAAAASAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEgAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAABgAAABIAAAAQAAAAEAAAABEAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAQAAAAEAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAASAAAAEAAAABAAAAAQAAAAEAAA
        ABAAAAAQAAAAEgAAAAYAAAAAAAAAAAAAAAAAAAAAAAAABgAAABIAAAAQAAAAEAAAABAAAAAQAAAAEAAA
        ABAAAAASAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAABAAAAuQAAAPcAAADwAAAA8gAA
        APIAAADyAAAA8gAAAPAAAAD3AAAAuQAAAAEAAAAAAAAAAAAAAAEAAAC5AAAA9wAAAPAAAADyAAAA8gAA
        APIAAADyAAAA8AAAAPcAAAC5AAAAAQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABEAAADuAAAA/wAA
        APIAAADyAAAA8gAAAPIAAADyAAAA8gAAAP8AAADuAAAAEQAAAAAAAAAAAAAAEQAAAO4AAAD/AAAA8gAA
        APIAAADyAAAA8gAAAPIAAADyAAAA/wAAAO4AAAARAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEAAA
        APAAAADyAAAAHwAAAAwAAAARAAAAEQAAAAwAAAAfAAAA8gAAAPAAAAAQAAAAAAAAAAAAAAAQAAAA8AAA
        APIAAAAfAAAADAAAABEAAAARAAAADAAAAB8AAADyAAAA8AAAABAAAAAAAAAAAQAAAAAAAAAAAAAAAQAA
        AAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAAAA
        ABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAAAA
        AAAAAAACAAAAAAAAABAAAADyAAAA8gAAABEAAAAAAAAAAgAAAAIAAAAAAAAAEQAAAPIAAADyAAAAEAAA
        AAAAAAAAAAAAEAAAAPIAAADyAAAAEQAAAAAAAAACAAAAAgAAAAAAAAARAAAA8gAAAPIAAAAQAAAAAAAA
        AAIAAAAAAAAAAQAAAAIAAAAAAAAAEQAAAPIAAADyAAAAEQAAAAAAAAACAAAAAgAAAAAAAAARAAAA8gAA
        APIAAAAQAAAAAAAAAAAAAAAQAAAA8gAAAPIAAAARAAAAAAAAAAIAAAACAAAAAAAAABEAAADyAAAA8gAA
        ABEAAAAAAAAAAgAAAAEAAAAAAAAACAAAAAIAAAAPAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAABAAAAAAAA
        ABAAAADyAAAA8gAAABAAAAAAAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAA
        APIAAADyAAAADwAAAAIAAAAIAAAAAAAAAAAAAADAAAAAvgAAAA4AAADvAAAA8wAAAB8AAAAMAAAAEQAA
        ABEAAAAMAAAAHwAAAPIAAADwAAAAEAAAAAAAAAAAAAAAEAAAAPAAAADyAAAAHwAAAAwAAAARAAAAEQAA
        AAwAAAAfAAAA8wAAAO8AAAAOAAAAvgAAAMAAAAAAAAAAEQAAAO8AAADvAAAAIgAAAOkAAAD/AAAA8gAA
        APIAAADyAAAA8gAAAPIAAADyAAAA/wAAAO4AAAARAAAAAAAAAAAAAAARAAAA7gAAAP8AAADyAAAA8gAA
        APIAAADyAAAA8gAAAPIAAAD/AAAA6QAAACIAAADvAAAA7wAAABEAAAARAAAA7AAAAPEAAAAQAAAAsAAA
        APMAAADvAAAA8wAAAPIAAADyAAAA8gAAAPAAAAD3AAAAuQAAAAEAAAAAAAAAAAAAAAEAAAC5AAAA9wAA
        APAAAADyAAAA8gAAAPIAAADzAAAA7wAAAPMAAACwAAAAEAAAAPEAAADsAAAAEQAAABEAAADsAAAA9AAA
        ABwAAAANAAAAJgAAAA8AAAANAAAAEQAAABAAAAAQAAAAEAAAABIAAAAGAAAAAAAAAAAAAAAAAAAAAAAA
        AAYAAAASAAAAEAAAABAAAAAQAAAAEQAAAA0AAAAPAAAAJgAAAA0AAAAcAAAA9AAAAOwAAAARAAAAEwAA
        AOoAAAD/AAAA9AAAAPEAAAD3AAAAvwAAAAIAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAgAAAL8AAAD3AAAA8QAAAPQAAAD/AAAA6gAA
        ABMAAAABAAAAswAAAPQAAADsAAAA7QAAAPgAAADAAAAAAwAAAAAAAAACAAAAAQAAAAEAAAABAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAABAAAAAgAAAAAAAAADAAAAwAAAAPgAAADtAAAA7AAA
        APQAAACzAAAAAQAAAAAAAAAGAAAAFAAAABEAAAARAAAAEgAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAEgAA
        ABEAAAARAAAAFAAAAAYAAAAAgX/+gQAC9AAAqWkAAAL0AAABaAAAAUgAgAEAAYEhSAEhIUAEoSGACaEh
        gEugAYAFoAGAS6AAAF/QAkC/pemSC6Xpl6XQAkALoAAABaABgAWgAYAFoSGEhaEhhIUhIYSEgSGEgYAB
        gAEAAYAAAAAAAAACQAAAqZUAAAJAAIF//oE=
</value>
  </data>
</root>